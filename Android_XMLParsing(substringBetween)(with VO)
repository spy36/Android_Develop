** java in code **

    String result;
    CustomTask task = new CustomTask();
    try {
    result = task.execute(hsno, spno).get();
    Log.d(TAG, result);

    String[] all_data = result.split("<list>");

    // 데이터 가공
    for (int i = 1; i < all_data.length; i++) {

        String word = all_data[i];
        try {
            String[] tmp = new String[2];
            tmp[0] = substringBetween(word, "<PAID>", "</PAID>");
            tmp[1] = substringBetween(word, "<NANM>", "</NANM>");

            data.add(new PatiVO(tmp[0], tmp[1]));
        } catch (Exception e) {
            Log.d(TAG, "ERR_data");
        }
    }
    } catch (InterruptedException e) {
        e.printStackTrace();
    }catch (NullPointerException e){
        e.printStackTrace();
        Toast.makeText(getApplicationContext(), "에러 발생.관리자에게 문의하세요. 에러코드 : M-NE1", Toast.LENGTH_SHORT).show();
    }catch (ExecutionException e) {
        e.printStackTrace();
    }
    
    
    private String substringBetween(String str, String open, String close) {
        if (str == null || open == null || close == null) {
            return null;
        }
        int start = str.indexOf(open);
        if (start != -1) {
            int end = str.indexOf(close, start + open.length());
            if (end != -1) {
                return str.substring(start + open.length(), end);
            }
        }
        return null;
    }

** Async in code **

protected class CustomTask extends AsyncTask<String, Void, String> {

        String sendMsg, receiveMsg;

        @Override

        protected void onPreExecute() {
            super.onPreExecute();

        }

        @Override
        protected String doInBackground(String... strings) {
            try {
                String str;
                URL url = new URL(getString(R.string.patiSelUrl));

                HttpURLConnection conn = (HttpURLConnection) url.openConnection();
                conn.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
                conn.setRequestMethod("POST");
                OutputStreamWriter osw = new OutputStreamWriter(conn.getOutputStream());
                sendMsg = "HSNO="+strings[0]+"&SPNO="+strings[1];
                osw.write(sendMsg);
                osw.flush();
                Log.d(TAG, "wker : " + url+sendMsg);
                if(conn.getResponseCode() == conn.HTTP_OK) {
                    InputStreamReader tmp = new InputStreamReader(conn.getInputStream(), "UTF-8");
                    BufferedReader reader = new BufferedReader(tmp);
                    StringBuffer buffer = new StringBuffer();
                    while ((str = reader.readLine()) != null) {
                        buffer.append(str);
                    }
                    receiveMsg = buffer.toString();
                    Log.d(TAG, "wker : " + receiveMsg);
                } else {
                    Log.i("통신 결과", conn.getResponseCode()+"에러");
                }

            } catch (MalformedURLException e) {
                e.printStackTrace();
            }catch (NullPointerException e){
                e.printStackTrace();
                Toast.makeText(getApplicationContext(), "에러 발생.관리자에게 문의하세요. 에러코드 : M-NE2", Toast.LENGTH_SHORT).show();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return receiveMsg;
        }

        @Override

        protected void onPostExecute(String s) {
            super.onPostExecute(s);
        }
    }
    

** PatiVO java in code **

    import android.os.Parcel;
    import android.os.Parcelable;

    public class PatiVO implements Parcelable  {

        private String idno = "";
        private String names = "";

        public PatiVO(){}

        public PatiVO(String idno, String names){
            this.idno = idno;
            this.names = names;
        }

        public String getIdno() {
            return idno;
        }

        public String getNames() {
            return names;
        }

        public PatiVO(Parcel in){
            this.idno = in.readString();
            this.names = in.readString();
        }

        @Override
        public int describeContents() {
            return 0;
        }

        @Override
        public void writeToParcel(Parcel dest, int flags) {
            dest.writeString(this.idno);
            dest.writeString(this.names);
        }

        @SuppressWarnings("rawtypes")
        public static final Parcelable.Creator CREATOR = new Parcelable.Creator() {

            @Override
            public PatiVO createFromParcel(Parcel in) {
                return new PatiVO(in);
            }

            @Override
            public PatiVO[] newArray(int size) {
                // TODO Auto-generated method stub
                return new PatiVO[size];
            }

        };

    }


** XML data example **

     <data><list><PAID>00002288</PAID><NANM>테스트</NANM></list><list><PAID>10011296</PAID><NANM>백유진</NANM></list></data>
     
** XML data result **

    
